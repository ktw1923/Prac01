plugins {
    id 'java'
    id 'war'
}

group = 'org.bit'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.springframework:spring-test:4.2.0.RELEASE'
    testImplementation 'junit:junit:4.12'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'

    // Spring Web 라이브러리 추가
    implementation 'org.springframework:spring-web:5.3.20'
    implementation 'org.springframework:spring-webmvc:5.3.20'
    implementation 'org.springframework:spring-context:5.3.20'
    implementation 'org.springframework:spring-core:5.3.20'

    // Spring WebSocket 및 Messaging 라이브러리 추가
    implementation 'org.springframework:spring-websocket:5.3.20'
    implementation 'org.springframework:spring-messaging:5.3.20'

    // Jackson 라이브러리 추가
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'

    // JSTL 라이브러리 추가
    implementation 'javax.servlet:jstl:1.2'

    // MyBatis 라이브러리 추가
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation 'mysql:mysql-connector-java:8.0.26'

    // Spring Security 라이브러리 추가
    implementation 'org.springframework.security:spring-security-core:5.5.1'
    implementation 'org.springframework.security:spring-security-web:5.5.1'
    implementation 'org.springframework.security:spring-security-config:5.5.1'

    implementation 'com.google.api-client:google-api-client:1.31.5'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.31.5'
    implementation 'com.google.api-client:google-api-client-gson:1.31.5'
    implementation 'com.google.http-client:google-http-client-jackson2:1.41.5'
}

tasks.test {
    useJUnitPlatform()
}

def frontendDir = "$projectDir/frontend"

sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "copyReactBuildFiles"
}

task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'npm.cmd', 'install'
    } else {
        commandLine 'npm', 'install'
    }
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'npm.cmd', 'run', 'build'
    } else {
        commandLine 'npm', 'run', 'build'
    }
}

task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/webapp/static"
}
